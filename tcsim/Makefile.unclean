#
# Makefile-unclean - Build tcsim (non-cleanup targets)
#
# Written 2001-2004 by Werner Almesberger
# Copyright 2001 EPFL-ICA, Network Robots
# Copyright 2002 Bivio Networks, Werner Almesberger
# Copyright 2003,2004 Werner Almesberger
#

include ../Common.make

OBJS=tcsim.o jiffies.o timer.o command.o var.o host.o attr.o \
     lex.yy.o y.tab.o \
     ksvc.o klink.o usvc.o module.o \
     trace.o klib/klib.o ulib/ulib.o

# general CFLAGS
CFLAGS_USER=$(CFLAGS_WARN) -I../shared -I. \
  -DVERSION=\"`cat ../VERSION`\" \
  $(shell sed '/TOPDIR=\(.*\)/s//-DTOPDIR=\\\"\1\\\"/p;d' <../config) \
  $(shell sed '/DATA_DIR=\(.*\)/s//-DDATA_DIR=\\\"\1\\\"/p;d' <../config) \
  $(shell sed '/DOLLAR=true/s//-DDOLLAR/p;d' <../config) \
  $(shell sed '/TCC=\(.*\)/s//-DTCC_CMD=\\\"\1\\\"/p;d' <../config) \
  $(shell sed '/KFULLVERSION=\(.*\)/s//-DKFULLVERSION=\\\"\1\\\"/p;d' \
    <../config) \
  $(shell sed '/KVERSION=\([0-9]*\)\.\([0-9]*\)\.\([0-9]*\)/\
    s//-DKVERSIONNUM=`printf "0x%02x%02x%02x" \1 \2 \3`/p;d' \
    <../config) \
  $(shell sed '/IVERSION=\(.*\)/s//-DIVERSION=\\\"\1\\\"/p;d' <../config)
CFLAGS_COMMON=$(CFLAGS_USER) \
  -Iklib -Iklib/include -Iulib/iproute2/include
CFLAGS=$(CC_OPTS) $(CFLAGS_COMMON)

# CFLAGS for code generated by flex and yacc
CFLAGS_GEN=$(CFLAGS_WARN) -g -w `sed '/BYTEORDER=/s//-D/p;d' <../config` \
  -I../shared

LDFLAGS=-Wl,-E
LIBS=-lfl -lm -ldl -L../shared -ltcngmisc $(LD_OPTS)

.PHONY:			modules depend dep

tcsim:			$(OBJS) Makefile ../Common.make
			$(CC) $(CC_OPTS) $(LDFLAGS) -o tcsim $(OBJS) $(LIBS)

tcsim.o:		tcsim.c
			$(CC) $(CFLAGS_USER) $(CC_OPTS) -c tcsim.c

modules:		../config klib/.ready ulib/.ready
			$(MAKE) -C modules

$(OBJS):		.depend

klib/klib.o:		klib/.ready
			$(MAKE) -C klib

ulib/ulib.o:		ulib/.ready klib/.ready
			$(MAKE) -C ulib

klib/.ready:		../config Makefile.klib setup.klib
			./setup.klib

ulib/.ready:		../config Makefile.ulib setup.ulib
			./setup.ulib

ksvc.o:			klib/.ready

../config:
			@echo "Please run configure" 1>&2
			@exit 1

lex.yy.c:		cfg.l y.tab.h
			$(LEX) cfg.l

lex.yy.o:		lex.yy.c y.tab.h
			$(CC) -c $(CFLAGS_GEN) lex.yy.c

y.tab.c y.tab.h:	cfg.y
			$(YACC) $(YYFLAGS) -d cfg.y

y.tab.o:		y.tab.c
			$(CC) -c $(CFLAGS_GEN) y.tab.c

tcsim.o:		../VERSION

$(OBJS):		../config

depend dep .depend:	klib/.ready ulib/.ready
			$(CPP) $(CFLAGS) -I. -M *.c >.depend || \
			  { rm -f .depend; exit 1; }

ifeq (.depend,$(wildcard .depend))
include .depend
endif
